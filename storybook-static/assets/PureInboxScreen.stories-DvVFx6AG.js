import{P as N}from"./PureTaskList-Cl1y_dui.js";import{c as B,d as x,o as l,f as L,a as d,y as w,e as a}from"./vue.esm-bundler-B-jCwmSO.js";import{d as E}from"./pinia-ofIvVtCW.js";import{_ as y,w as A,a as k}from"./index-DiWHYtpv.js";import"./index-Bqoxw6Vv.js";const K=[{id:"1",title:"Something",state:"TASK_INBOX"},{id:"2",title:"Something more",state:"TASK_INBOX"},{id:"3",title:"Something else",state:"TASK_INBOX"},{id:"4",title:"Something again",state:"TASK_INBOX"}],O=E({id:"taskbox",state:()=>({tasks:K,status:"idle",error:null}),actions:{archiveTask(s){const e=this.tasks.find(t=>t.id===s);e&&(e.state="TASK_ARCHIVED")},pinTask(s){const e=this.tasks.find(t=>t.id===s);e&&(e.state="TASK_PINNED")}},getters:{getFilteredTasks:s=>s.tasks.filter(t=>t.state==="TASK_INBOX"||t.state==="TASK_PINNED")}}),b={components:{PureTaskList:N},name:"TaskList",setup(){const s=O();return{tasks:B(()=>s.getFilteredTasks),archiveTask:r=>s.archiveTask(r),pinTask:r=>s.pinTask(r)}}};function $(s,e,t,o,r,P){const p=x("PureTaskList");return l(),L(p,{tasks:o.tasks,onArchiveTask:o.archiveTask,onPinTask:o.pinTask},null,8,["tasks","onArchiveTask","onPinTask"])}const D=y(b,[["render",$]]);b.__docgenInfo={displayName:"TaskList",exportName:"default",description:"",tags:{},sourceFiles:["/Users/KurylovichYury/Projects/storybook/taskbox/src/components/TaskList.vue"]};const I={name:"PureInboxScreen",components:{TaskList:D},props:{error:{type:Boolean,default:!1}}},X={key:0,class:"page lists-show"},F=a("div",{class:"wrapper-message"},[a("span",{class:"icon-face-sad"}),a("p",{class:"title-message"},"Oh no!"),a("p",{class:"subtitle-message"},"Something went wrong")],-1),V=[F],j={key:1,class:"page lists-show"},C=a("nav",null,[a("h1",{class:"title-page"},"Taskbox")],-1);function U(s,e,t,o,r,P){const p=x("TaskList");return l(),d("div",null,[t.error?(l(),d("div",X,V)):(l(),d("div",j,[C,w(p)]))])}const W=y(I,[["render",U]]);I.__docgenInfo={displayName:"PureInboxScreen",exportName:"default",description:"",tags:{},props:[{name:"error",type:{name:"boolean"},defaultValue:{func:!1,value:"false"}}],sourceFiles:["/Users/KurylovichYury/Projects/storybook/taskbox/src/components/PureInboxScreen.vue"]};const G={component:W,title:"PureInboxScreen",tags:["autodocs"]},n={},c={args:{error:!0}},i={play:async({canvasElement:s})=>{const e=A(s);await k.click(e.getByLabelText("pinTask-1")),await k.click(e.getByLabelText("pinTask-3"))}};var u,m,T;n.parameters={...n.parameters,docs:{...(u=n.parameters)==null?void 0:u.docs,source:{originalSource:"{}",...(T=(m=n.parameters)==null?void 0:m.docs)==null?void 0:T.source}}};var _,f,h;c.parameters={...c.parameters,docs:{...(_=c.parameters)==null?void 0:_.docs,source:{originalSource:`{
  args: {
    error: true
  }
}`,...(h=(f=c.parameters)==null?void 0:f.docs)==null?void 0:h.source}}};var g,v,S;i.parameters={...i.parameters,docs:{...(g=i.parameters)==null?void 0:g.docs,source:{originalSource:`{
  play: async ({
    canvasElement
  }) => {
    const canvas = within(canvasElement);
    await fireEvent.click(canvas.getByLabelText('pinTask-1'));
    await fireEvent.click(canvas.getByLabelText('pinTask-3'));
  }
}`,...(S=(v=i.parameters)==null?void 0:v.docs)==null?void 0:S.source}}};const J=["Default","Error","WithInteractions"];export{n as Default,c as Error,i as WithInteractions,J as __namedExportsOrder,G as default};
